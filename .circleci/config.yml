version: 2
jobs:
  build_and_test_elixir:
    docker:
      - image: circleci/elixir:1.6.5
      - image: circleci/postgres:10.3

    environment:
      COVERALLS_REPO_TOKEN: WQJAD2rl0QMcK0OukyWM49Aq1gXqQEJXY

    working_directory: /home/circleci/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - elixir-build-v3-{{ checksum "mix.lock" }}
      - run:
          name: "Install Hex"
          command: mix local.hex --force
      - run:
          name: "Install Rebar"
          command: mix local.rebar --force
      - run:
          name: "Install Elixir dependencies"
          command: mix deps.get
      - run:
          name: "Compile Elixir source"
          command: mix compile
      - run:
          name: "Create the test database"
          command: mix ecto.create
      - run:
          name: "Run Elixir test suite (with coveralls)"
          command: mix coveralls
      - run:
          name: "Run Elixir linting"
          command: mix credo
      - run:
          name: "Run Elixir formatter check"
          command: mix format --check-formatted
      - run:
          name: "Run dialyzer"
          command: mix dialyzer
      - save_cache:
          key: elixir-build-v3-{{ checksum "mix.lock" }}
          paths:
            - '_build'
            - 'deps'
            - '~/.mix'

  build_and_test_elm:
    docker:
      - image: circleci/node:8

    working_directory: /home/circleci/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - sysconfcpus-v1
      - restore_cache:
          keys:
            - elm-stuff-v5-{{ checksum "assets/elm/elm-package.json" }}-{{ checksum "assets/elm/tests/elm-package.json" }}
      - restore_cache:
          keys:
            - elixir-build-v3-{{ checksum "mix.lock" }}
      - run:
          name: "Install yarn packages"
          command: cd assets && yarn install
      - run:
          name: "Correct CPU count for elm compiler"
          command: |
            if [ ! -d sysconfcpus/bin ];
            then
              # Install libsysconfcpus utility
              # See https://github.com/elm-lang/elm-compiler/issues/1473
              git clone https://github.com/obmarg/libsysconfcpus.git;
              cd libsysconfcpus;
              ./configure --prefix $CIRCLE_WORKING_DIRECTORY/sysconfcpus;
              make && make install;
              cd ..;
            fi

            if [ ! -f $(yarn bin)/elm-make-original ];
            then
              # Replace the elm-make binstub with an optimized one
              cd assets;
              mv $(yarn bin)/elm-make $(yarn bin)/elm-make-original;
              printf "#\041/bin/bash\n\necho \"Running elm-make with sysconfcpus -n 2\"\n\n$CIRCLE_WORKING_DIRECTORY/sysconfcpus/bin/sysconfcpus -n 2 $(yarn bin)/elm-make-original \"\$@\"" > $(yarn bin)/elm-make;
              chmod +x $(yarn bin)/elm-make;
            fi
      - run:
          name: "Run Elm test suite"
          command: script/elm-test
      - save_cache:
          key: sysconfcpus-v1
          paths:
            - 'sysconfcpus'
      - save_cache:
          key: elm-stuff-v5-{{ checksum "assets/elm/elm-package.json" }}-{{ checksum "assets/elm/tests/elm-package.json" }}
          paths:
            - 'assets/elm/elm-stuff'
            - 'assets/elm/tests/elm-stuff'
workflows:
  version: 2
  build_and_test:
    jobs:
      - build_and_test_elixir
      - build_and_test_elm:
          requires:
            - build_and_test_elixir
